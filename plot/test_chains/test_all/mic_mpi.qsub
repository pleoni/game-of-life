#!/bin/bash
#PBS -j oe
#PBS -A CON13_INFN
#PBS -N life_mpi_test
#PBS -q parallel
#PBS -l walltime=01:00:00
##GPU
##PBS -l select=1:ncpus=16:ngpus=1:mem=5gb
##GPU-MPI
##PBS -l select=8:ncpus=1:ngpus=1:mem=5gb
##MIC
##PBS -l select=1:ncpus=16:nmics=2:mem=5gb
##MIC-MPI
#PBS -l select=8:ncpus=1:nmics=2:mem=5gb
##HOST
##PBS -l select=1:ncpus=16:mem=5gb:cpuspeed=2GHz
##HOST-MPI
##PBS -l select=8:ncpus=16:mem=5gb:cpuspeed=2GHz

if [[ $type == "acc" ]]
then	
	module load pgi openmpi/1.6.5--pgi--14.1
	cd ~/game-of-life

	make accpgi

	for N in $(echo 1)
	do
		for DIM in $(echo 17000 8000 4000 2000 1000 )
		do 
			for COMP in $(echo 1000 0)
			do
				CMD="mpirun -np $N ./life_hpc2_accpgi -r $DIM -c $DIM -n $COMP -s 10 -d 0"
				echo "# $CMD"
				eval $CMD
			done
		done
	done
fi

if [[ $type == "acc-mpi" ]]
then
	module load pgi openmpi/1.6.5--pgi--14.1
	cd ~/game-of-life

	make accpgi

	for N in $(echo 8 4 1)
	do
		for DIM in $(echo 17000 8000 4000 2000 1000 )
		do 
			for COMP in $(echo 1000 1)
			do
			CMD="mpirun -np $N ./life_hpc2_accpgi -r $DIM -c $DIM -n $COMP -s 10 -d 0"
			echo "# $CMD"
			eval $CMD
			done
		done
	done
fi

if [[ $type = "host-icc" ]]
then
	module load intel intelmpi
	cd ~/game-of-life

	make ompicc

	for N in $(echo 1)
	do
		for DIM in $(echo 17000 8000 4000 2000 1000 )
		do 
			for COMP in $(echo 1000 0)
			do
				CMD="mpirun -np $N ./life_hpc2_ompicc -t 16 -r $DIM -c $DIM -n $COMP -s 10 -d 0"
				echo "# $CMD"
				eval $CMD
			done
		done
	done
fi

if [[ $type = "host-icc-mpi" ]]
then
	module load intel intelmpi
	cd ~/game-of-life

	make ompicc

	for N in $(echo 8 4 1)
	do
		for DIM in $(echo 17000 8000 4000 2000 1000 )
		do 
			for COMP in $(echo 1000 0)
			do
			CMD="mpirun -np $N ./life_hpc2_ompicc -t 16 -r $DIM -c $DIM -n $COMP -s 10 -d 0"
			echo "# $CMD"
			eval $CMD
			done
		done
	done
fi

if [[ $type = "host-gnu" ]]
then
	module load gnu openmpi
	cd ~/game-of-life

	make ompgnu

	for N in $(echo 1)
	do
		for DIM in $(echo 17000 8000 4000 2000 1000 )
		do 
			for COMP in $(echo 1000 0)
			do
				CMD="mpirun -np $N ./life_hpc2_ompgnu -t 16 -r $DIM -c $DIM -n $COMP -s 10 -d 0"
				echo "# $CMD"
				eval $CMD
			done
		done
	done
fi

if [[ $type = "host-gnu-mpi" ]]
then
	module load gnu openmpi
	cd ~/game-of-life

	make ompgnu

	for N in $(echo 8 4 1)
	do
		for DIM in $(echo 17000 8000 4000 2000 1000 )
		do 
			for COMP in $(echo 1000 0)
			do
			CMD="mpirun -np $N ./life_hpc2_ompgnu -t 16 -r $DIM -c $DIM -n $COMP -s 10 -d 0"
			echo "# $CMD"
			eval $CMD
			done
		done
	done
fi

if [[ $type = "host-pgi" ]]
then
	module load pgi openmpi/1.6.5--pgi--14.1
	cd ~/game-of-life

	make omppgi

	for N in $(echo 1)
	do
		for DIM in $(echo 17000 8000 4000 2000 1000 )
		do 
			for COMP in $(echo 1000 0)
			do
				CMD="mpirun -np $N ./life_hpc2_omppgi -t 16 -r $DIM -c $DIM -n $COMP -s 10 -d 0"
				echo "# $CMD"
				eval $CMD
			done
		done
	done
fi

if [[ $type = "host-pgi-mpi" ]]
then
	module load pgi openmpi/1.6.5--pgi--14.1
	cd ~/game-of-life

	make omppgi

	for N in $(echo 8 4 1)
	do
		for DIM in $(echo 17000 8000 4000 2000 1000 )
		do 
			for COMP in $(echo 1000 0)
			do
			CMD="mpirun -np $N ./life_hpc2_omppgi -t 16 -r $DIM -c $DIM -n $COMP -s 10 -d 0"
			echo "# $CMD"
			eval $CMD
			done
		done
	done
fi

if [[ $type = "mic" ]]
then
	module load intel intelmpi mkl
	source $INTEL_HOME/bin/compilervars.sh intel64
	export I_MPI_MIC=enable
	export MIC0=$(cat $PBS_NODEFILE | head -n 1 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")

	cd ~/game-of-life

	make ompmic

	cd ~

	for N in $(echo 1)
	do
		for DIM in $(echo 17000 8000 4000 2000 1000 )
		do 
			for COMP in $(echo 1000 0)
			do
			CMD="mpirun.mic -host ${MIC0} -np $N -genv LD_LIBRARY_PATH=/cineca/prod/compilers/intel/cs-xe-2013/binary/lib/mic/ ./game-of-life/life_hpc2_omp.mic -t 240 -r $DIM -c $DIM -n $COMP -s 10 -d 0"
			echo "# $CMD"
			eval $CMD
			done
		done
	done
fi

if [[ $type = "mic-mpi" ]]
then
	module load intel intelmpi mkl
	source $INTEL_HOME/bin/compilervars.sh intel64
	export I_MPI_MIC=enable

	cd ~/game-of-life

	make ompmic

	export MIC0=$(cat $PBS_NODEFILE | head -n 1 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")
	export MIC1=$(cat $PBS_NODEFILE | head -n 2 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")
	export MIC2=$(cat $PBS_NODEFILE | head -n 3 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")
	export MIC3=$(cat $PBS_NODEFILE | head -n 4 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")
	export MIC4=$(cat $PBS_NODEFILE | head -n 5 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")
	export MIC5=$(cat $PBS_NODEFILE | head -n 6 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")
	export MIC6=$(cat $PBS_NODEFILE | head -n 7 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")
	export MIC7=$(cat $PBS_NODEFILE | head -n 8 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")

	cd ~

	for DIM in $(echo 16384 8192 4096 2048)
	do 
		for COMP in $(echo 1000 500 100 1)
		do
		CMD="mpirun.mic -host ${MIC0},${MIC1},${MIC2},${MIC3},${MIC4},${MIC5},${MIC6},${MIC7} -perhost 1 -genv LD_LIBRARY_PATH=/cineca/prod/compilers/intel/cs-xe-2013/binary/lib/mic/ ./game-of-life/life_hpc2_omp.mic -t 240 -r $DIM -c $DIM -n $COMP -s 10 -d 0"
		echo "# $CMD"
		eval $CMD
		CMD="mpirun.mic -host ${MIC0},${MIC1},${MIC2},${MIC3} -perhost 1 -genv LD_LIBRARY_PATH=/cineca/prod/compilers/intel/cs-xe-2013/binary/lib/mic/ ./game-of-life/life_hpc2_omp.mic -t 240 -r $DIM -c $DIM -n $COMP -s 10 -d 0"
		echo "# $CMD"
		eval $CMD
		CMD="mpirun.mic -host ${MIC0},${MIC1} -np 1 -genv LD_LIBRARY_PATH=/cineca/prod/compilers/intel/cs-xe-2013/binary/lib/mic/ ./game-of-life/life_hpc2_omp.mic -t 240 -r $DIM -c $DIM -n $COMP -s 10 -d 0"
		echo "# $CMD"
		eval $CMD
		CMD="mpirun.mic -host ${MIC0} -np 1 -genv LD_LIBRARY_PATH=/cineca/prod/compilers/intel/cs-xe-2013/binary/lib/mic/ ./game-of-life/life_hpc2_omp.mic -t 240 -r $DIM -c $DIM -n $COMP -s 10 -d 0"
		echo "# $CMD"
		eval $CMD
		done
	done
fi

if [[ $type = "mic-mpi-nc" ]]
then
	module load intel intelmpi mkl
	source $INTEL_HOME/bin/compilervars.sh intel64
	export I_MPI_MIC=enable

	cd ~/game-of-life

	make ompmic

	export MIC0=$(cat $PBS_NODEFILE | head -n 1 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")
	export MIC1=$(cat $PBS_NODEFILE | head -n 2 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")
	export MIC2=$(cat $PBS_NODEFILE | head -n 3 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")
	export MIC3=$(cat $PBS_NODEFILE | head -n 4 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")
	export MIC4=$(cat $PBS_NODEFILE | head -n 5 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")
	export MIC5=$(cat $PBS_NODEFILE | head -n 6 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")
	export MIC6=$(cat $PBS_NODEFILE | head -n 7 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")
	export MIC7=$(cat $PBS_NODEFILE | head -n 8 | tail -n 1 | sed  "s/[(DDD).]/$1-mic0./")

	cd ~

	for DIM in $(echo 16384 8192 4096 2048)
	do 
		for COMP in $(echo 1000)
		do
		CMD="mpirun.mic -host ${MIC0},${MIC1},${MIC2},${MIC3},${MIC4},${MIC5},${MIC6},${MIC7} -perhost 1 -genv LD_LIBRARY_PATH=/cineca/prod/compilers/intel/cs-xe-2013/binary/lib/mic/ ./game-of-life/life_hpc2_omp.mic -t 240 -x -r $DIM -c $DIM -n $COMP -s 10 -d 0"
		echo "# $CMD"
		eval $CMD
		CMD="mpirun.mic -host ${MIC0},${MIC1},${MIC2},${MIC3} -perhost 1 -genv LD_LIBRARY_PATH=/cineca/prod/compilers/intel/cs-xe-2013/binary/lib/mic/ ./game-of-life/life_hpc2_omp.mic -t 240 -x -r $DIM -c $DIM -n $COMP -s 10 -d 0"
		echo "# $CMD"
		eval $CMD
		CMD="mpirun.mic -host ${MIC0},${MIC1} -np 1 -genv LD_LIBRARY_PATH=/cineca/prod/compilers/intel/cs-xe-2013/binary/lib/mic/ ./game-of-life/life_hpc2_omp.mic -t 240 -x -r $DIM -c $DIM -n $COMP -s 10 -d 0"
		echo "# $CMD"
		eval $CMD
		CMD="mpirun.mic -host ${MIC0} -np 1 -genv LD_LIBRARY_PATH=/cineca/prod/compilers/intel/cs-xe-2013/binary/lib/mic/ ./game-of-life/life_hpc2_omp.mic -t 240 -x -r $DIM -c $DIM -n $COMP -s 10 -d 0"
		echo "# $CMD"
		eval $CMD
		done
	done
fi
